[{"C:\\Users\\afroj\\Documents\\haia_final\\src\\index.js":"1","C:\\Users\\afroj\\Documents\\haia_final\\src\\App.js":"2","C:\\Users\\afroj\\Documents\\haia_final\\src\\home.js":"3","C:\\Users\\afroj\\Documents\\haia_final\\src\\components\\navbarcomponent.js":"4","C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\entrylist.js":"5","C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\entryMod.js":"6","C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\entry.js":"7","C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\searchResults.js":"8","C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\advancedSearch.js":"9","C:\\Users\\afroj\\Documents\\haia_final\\src\\components\\searchbar.js":"10","C:\\Users\\afroj\\Documents\\haia_final\\src\\service\\database.js":"11","C:\\Users\\afroj\\Documents\\haia_final\\src\\http-common.js":"12","C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\countryList.js":"13","C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\idNames.js":"14"},{"size":576,"mtime":1682898529534,"results":"15","hashOfConfig":"16"},{"size":3179,"mtime":1682918448331,"results":"17","hashOfConfig":"16"},{"size":1614,"mtime":1682992838733,"results":"18","hashOfConfig":"16"},{"size":993,"mtime":1682942063683,"results":"19","hashOfConfig":"16"},{"size":1085,"mtime":1682564215085,"results":"20","hashOfConfig":"16"},{"size":8172,"mtime":1682911684305,"results":"21","hashOfConfig":"16"},{"size":4246,"mtime":1682995956046,"results":"22","hashOfConfig":"16"},{"size":11019,"mtime":1682993511684,"results":"23","hashOfConfig":"16"},{"size":5562,"mtime":1682996908290,"results":"24","hashOfConfig":"16"},{"size":2130,"mtime":1682991168693,"results":"25","hashOfConfig":"16"},{"size":2905,"mtime":1682892005351,"results":"26","hashOfConfig":"16"},{"size":674,"mtime":1682685882657,"results":"27","hashOfConfig":"16"},{"size":5607,"mtime":1682876667342,"results":"28","hashOfConfig":"16"},{"size":1963,"mtime":1682881689857,"results":"29","hashOfConfig":"16"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1dbbuoa",{"filePath":"33","messages":"34","suppressedMessages":"35","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"36"},{"filePath":"37","messages":"38","suppressedMessages":"39","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"40","messages":"41","suppressedMessages":"42","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"43"},{"filePath":"44","messages":"45","suppressedMessages":"46","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"47"},{"filePath":"48","messages":"49","suppressedMessages":"50","errorCount":0,"fatalErrorCount":0,"warningCount":8,"fixableErrorCount":0,"fixableWarningCount":0,"source":"51"},{"filePath":"52","messages":"53","suppressedMessages":"54","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"55","messages":"56","suppressedMessages":"57","errorCount":0,"fatalErrorCount":0,"warningCount":10,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"58","messages":"59","suppressedMessages":"60","errorCount":0,"fatalErrorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"61"},{"filePath":"62","messages":"63","suppressedMessages":"64","errorCount":0,"fatalErrorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"65","messages":"66","suppressedMessages":"67","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"68","messages":"69","suppressedMessages":"70","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"71","messages":"72","suppressedMessages":"73","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"74","messages":"75","suppressedMessages":"76","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"C:\\Users\\afroj\\Documents\\haia_final\\src\\index.js",[],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\App.js",["77","78","79","80"],[],"//Framework imports\nimport React from \"react\";\n//Component imports\nimport SearchBar from './components/searchbar';\n//Page imports\nimport Home from './home';\nimport Entry from './pages/entry';\nimport SearchResults from './pages/searchResults';\nimport AdvSearch from './pages/advancedSearch';\nimport EntryMod from './pages/entryMod';\nimport haiastyles from \"./style/haiastyles.css\"\n\nimport { Routes, Route, Link} from \"react-router-dom\";\n\n//The actual contents of the webpage are contained in the app.js file, within this function. The contents of this function are returned to the index.html file.\n//Note that because this is in a js file, some tags are different than in raw html and are accordingly converted when sent over to the html file.\n//        className -> class , as \"class\" is a RESERVED javascript term.\n//        \nfunction App() {\n  //Before reaching the return bloc in any app return section, we may declare any number of variables and work wiht them. REMEMBER THAT!\n  //We may accordingly access those variables wiht the syntax { varname } as if it were either html section code or page text (inwhich case, the contents of the value are converted ot a string before input).\n  //We can also put in CODE within the curly braces, whose contents or return value will be given in the browser or returned as a Stirng.\n  const title = \"Welcome to Hidden's African Image Archive!\";\n\n\n  return (\n    <div className=\"content\">\n      {\n        //This section controls movement between a series of routes, each of which corresponds to an js docuemnt encoding for an html page body, which will control what displays in the client page.\n      }\n      <Routes>\n        {\n          //If I am on the home page, display the contents of the Home class.\n        }\n        <Route path={'/'} element={<Home/>} />\n        <Route path={'/Home'} element={<Home/>} />\n\n\n        {\n          //If I am on advsearch, display the contents of the advsearch class.\n        }\n        <Route path={\"/advsearch\"} element={<AdvSearch/>} />\n        {\n          //If I am on searchResults, display the contents of the searchresults class. This takes in props given by the search components (either advancedsearch.js OR searchbar)\n        }\n        <Route path={'/search/:find'} element={<SearchResults/>} />\n\n\n\n        {\n          /*entry route, given the path (url) \"/entry\" and a given id. Is not an EXACT path because we want the \":id\" section to be malleable for different entries. Uses PROPS to specify entry in the query.\n              the render is not controlled simply using a component part like with Home, but instead by using a specific render function which passes in props. The props will initiate a method call in Entry, which will in turn determine which entry to display.\n          */\n        }\n        <Route path ={'/entry/:hid'} element={<Entry />}\n            />\n        \n        {\n          //If I am on the entryMod page, display the contents of the entryMod class.\n        }\n        <Route path ={'/entryMod'} element={<EntryMod/>} />\n\n\n      </Routes>\n    </div>\n  );\n}\n\n//Return the app contents to the index.html file.\nexport default App;\n\n\n  //Non-switch homepage //<Home />","C:\\Users\\afroj\\Documents\\haia_final\\src\\home.js",["81","82","83","84","85","86"],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\components\\navbarcomponent.js",["87","88","89","90","91"],[],"import { Switch, Route, Link} from \"react-router-dom\";\r\nimport React from \"react\";\r\nimport \"../style/haiastyles.css\";\r\nimport SearchBar from './searchbar';\r\nimport youtubeLogo from \"../img/youtubelogo.svg\"\r\n\r\n//Component for the nav bar, which will be shared by all webpages in site.\r\nconst Navbar = () => {\r\n    return ( \r\n        <div className = \"navWrap\">\r\n        <nav className=\"navbar\">\r\n                <ul className=\"navbarItem\"><a href=\"/home\">Home</a></ul>\r\n                {\r\n                //<a href=\"/about\">About</a>\r\n                }\r\n                <ul className=\"navbarItem\"><a href=\"/advsearch\">Advanced Search</a></ul>\r\n                <ul className=\"navbarItem\"><a href=\"https://www.youtube.com/channel/UCaIHjtxqn6_ej_jNLUXMeiw\">Youtube{/*<img src={youtubeLogo}/>*/}</a></ul>\r\n                <ul className=\"navbarItem\"><a href=\"/entryMod\">entryMod</a></ul>\r\n            \r\n            \r\n            \r\n        </nav>\r\n        </div>\r\n    );\r\n}\r\n \r\nexport default Navbar;","C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\entrylist.js",[],[],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\entryMod.js",["92","93","94","95","96","97","98","99"],[],"//EntryMod: lists all entries in the database and allows for modification of the server database and thus the entry pool.\r\n\r\n//Imports\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport countryList from '../dev/countryList.js';\r\nimport idNames from '../dev/idNames.js';\r\nimport '../style/devstyle.css'\r\n\r\n//Import database class to access methods which allow for communications with database.\r\nimport database from '../service/database';\r\n\r\nconst EntryMod = props => {\r\n\r\n  const country_toISO = countryList;\r\n  const idfromName = idNames;\r\n  /*Notes on REACT function organization*/\r\n    //Before reaching the return bloc in any app return section, we may declare any number of variables and work wiht them. REMEMBER THAT!\r\n    //We may accordingly access those variables wiht the syntax { varname } as if it were either html section code or page text (inwhich case, the contents of the value are converted ot a string before input).\r\n    //We can also put in CODE within the curly braces, whose contents or return value will be given in the browser or returned as a Stirng.\r\n    \r\n    //Set of variables for all posisble searchterms\r\n    \r\n    const [commands, setCommands] = useState([])\r\n    const [text, setText] = useState(\"\");\r\n    //useEffect communicates that the render of this component is not complete even after a page load, so that the page can continue to render\r\n\r\n    //Add the delete process to this class to send off delete requests.\r\n    const deleteEntry = die =>{\r\n      die = die.substring(7);\r\n      console.log(die)\r\n      if(die.length == 24){\r\n        database.deleteEntry(die)\r\n              .catch(error => {\r\n                console.log(error);\r\n                setCommands([String.toString(error), ...commands]);\r\n              });\r\n          }\r\n      else{\r\n        setCommands([\"Invalid deletion request!\"])\r\n      }\r\n    }\r\n\r\n    const updateEntry = change => {\r\n      let updateBody = change.substring(7);\r\n      try{\r\n        let updateObj = JSON.parse(updateBody);\r\n        let updated;\r\n\r\n        //Check for essential properties. If any invalids then return (end)\r\n        if(\"hid\" in updateObj){\r\n          //Retrieve the object to be updated, or throw an error if it was not found.\r\n          database.get(updateObj.hid, \"hid\")\r\n                .then(response => {\r\n                    console.log(response.data.results);\r\n                    //Update using the merging of the original object and the new set of contents, overwriting older contents which conflict.\r\n                    updated = {...response.data.results[0], ...updateObj}\r\n                    //Update our log of commands.\r\n                    setCommands([JSON.stringify(response.data.results[0]) + '=>' + JSON.stringify(updated), ...commands]);\r\n                    database.updateEntry(updated);\r\n                })\r\n                .catch(error => {\r\n                  console.log(error)\r\n                  setCommands([\"Entry does not exist in the database!\", ...commands,])\r\n                })\r\n        }\r\n        else{\r\n          setCommands([JSON.stringify(updateObj), \"Invalid input!\", ...commands])\r\n          console.log(\"Invalid input!\", updateObj)\r\n        }\r\n    }\r\n    catch(error){\r\n      setCommands([...commands, updateBody,\"Invalid Input\"])\r\n      console.log(\"Invalid input!\", updateBody)\r\n    }\r\n    }\r\n\r\n    const postEntry = add => {\r\n      let addBody = add.substring(5);\r\n      try{\r\n        let addObj = JSON.parse(addBody);\r\n\r\n        if(addObj.hasOwnProperty(\"title\") && \"src\" in addObj && \"keywords\" in addObj && \"url\" in addObj && \"country\" in addObj){\r\n        //If the post-entry is valid, then we will generate an hid.\r\n        //Retrieve country code\r\n        let tempHID = '';\r\n          if(country_toISO[addObj.country]){\r\n            tempHID = country_toISO[addObj.country]\r\n          }\r\n          else{\r\n            setCommands(\"Invalid country input!\", ...commands)\r\n            return\r\n          }\r\n          //Use source to generate a book-code for the entry.\r\n          if(addObj.shortsrc){\r\n            tempHID = tempHID + idfromName[addObj.shortsrc.toUpperCase()];\r\n          }\r\n          else{\r\n            tempHID = tempHID + idfromName[addObj.src.toUpperCase()]\r\n          }\r\n          //First, retrieve any potentially matching hid vales from the database through a simple search query by hid, unpaginated.\r\n          database.find(tempHID, \"hid\")\r\n              .then(response => {\r\n                console.log(response.data.results)\r\n                //Then, use the size of the resulting set of HIDs to determine the numerical value to follow the base-tempHID (specifically, how many 0s.).\r\n                let i = (response.data.results.length + 1) + '';\r\n                for(let o = i.length; o < 4; o++){\r\n                  i = '0' + i;\r\n                }\r\n                addObj.hid = tempHID + i;\r\n                database.createEntry(addObj);\r\n              })\r\n              .catch(error => {\r\n                console.log(error)\r\n              })\r\n          }\r\n          else{\r\n            setCommands([JSON.stringify(addObj), ...commands]);\r\n            console.log(\"Invalid Input!\", addObj)\r\n          }\r\n      }\r\n      catch(error){\r\n        setCommands([addBody,\"Invalid Input\", ...commands]);\r\n        console.log(\"Invalid Input!\", addBody)\r\n      }\r\n    }\r\n\r\n    //Method meant to remove command request, since we already have determined that & acted appropriately.\r\n    /*function requestChop(string, to){\r\n      return string.substring(to)\r\n    }*/\r\n    \r\n    /*//Method meant to determine the individual fields\r\n    function fieldQuery(string, param){\r\n\r\n    }*/\r\n\r\n    function commandSend(string){\r\n      //this is a delete request\r\n      if(string.substring(0,7) =='delete:'){\r\n        console.log('delete request');\r\n        deleteEntry(string);\r\n      }\r\n      //this is a slice request\r\n      else if(string.substring(0,7) =='update:'){\r\n        console.log('update request');\r\n        updateEntry(string);\r\n      }\r\n      //this is a post request.\r\n      else if(string.substring(0,5) =='post:'){\r\n        console.log('post request');\r\n        postEntry(string);\r\n      }\r\n      else if(string == 'clear'){\r\n        console.log('clear request');\r\n      }\r\n      \r\n    }\r\n    //Use a FIFO queue to process dat.\r\n\r\n    //for each of the entry modification thingies, \r\n  \r\n  return (\r\n<div className =\"developerPage\">                          {/* Encompassing div to wrap all contained elements*/}\r\n        \r\n        {/*Div to contain the input history to the console.*/}\r\n        <div className=\"consoleLog\">\r\n        {  commands.map((entry, keyval) => (\r\n            <div className=\"indvLog\" key={keyval}>\r\n              {entry}\r\n            </div>\r\n          ))\r\n        }\r\n        </div>\r\n\r\n        {/*Div to contain the actual input bar.*/}\r\n        <div className=\"barMod\">\r\n            {/*Command input*/}\r\n            <input  className=\"bar\"\r\n                    type=\"text\"\r\n                    placeholder=\"\"\r\n                    value={text}\r\n                    onChange={e => setText(e.target.value)}\r\n                    onKeyUp={e => \r\n                      {if(e.key == 'Enter'){\r\n                        commandSend(text);\r\n                        setCommands([text, ...commands]);\r\n                        setText(\"\");\r\n                        console.log(\"Enter pressed\");\r\n                      }}\r\n                    }\r\n            />\r\n          {/*Button in case you want to press a button to send the input*/}\r\n          <button   onClick={ () =>\r\n                      {commandSend(text);\r\n                       setCommands([text, ...commands]);\r\n                       setText(\"\");\r\n                      }\r\n          }/>\r\n          </div>\r\n</div>);\r\n}\r\n  \r\n  //Return the app contents to the file\r\n  export default EntryMod;\r\n\r\n  //We want ENTRYMOD to BY DEFAULT send a FIND ALL call to the DATABASE.JS file, WHICH RETRIEVES ALL FILES, and for BUTTONS on the DISPLAYED RESULTS given FROM the DATABASE.JS file to then fire MORE methods from the DATABASE.JS file to MODIFY the general DATABASE.","C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\entry.js",["100","101","102","103","104","105"],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\searchResults.js",["106","107","108","109","110","111","112","113","114","115"],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\pages\\advancedSearch.js",["116","117","118","119","120"],[],"//Imports\r\n\r\n//Image Imports\r\nimport logo from \"../img/haia.png\"\r\n\r\nimport \"../style/haiastyles.css\"\r\n\r\nimport React from \"react\";\r\nimport { useState, useEffect } from \"react\";\r\nimport { Link } from \"react-router-dom\";\r\nimport Navbar from '../components/navbarcomponent';\r\n\r\n//Import database class which allows for communications with database.\r\nimport EntryDataService from '../service/database';\r\n\r\n//import searchResults?\r\nimport SearchResults from \"./searchResults\";\r\n\r\n\r\n//Purpose of this page is to take a set of search parameters, and to pass it on to the searchResults page, which will display the resulting search.\r\n\r\nconst AdvancedSearch = () => {\r\n    \r\n    const [searchTitle, setSearchTitle] = useState(\"\");\r\n    const [searchSource, setSearchSource] = useState(\"\");\r\n    const [searchKeywords, setSearchKeywords] = useState(\"\");\r\n    const [searchEntriesPerPage, setSearchEntriesPerPage] = useState(\"10\");\r\n\r\n    \r\n  /*Notes on REACT function organization*/\r\n    //Before reaching the return bloc in any app return section, we may declare any number of variables and work wiht them. REMEMBER THAT!\r\n    //We may accordingly access those variables wiht the syntax { varname } as if it were either html section code or page text (inwhich case, the contents of the value are converted ot a string before input).\r\n    //We can also put in CODE within the curly braces, whose contents or return value will be given in the browser or returned as a Stirng.\r\n\r\n\r\n    //When the search button is hit, we are going to retrieve the values from each of the input box fields, and we are going to pass them into the prop for the searchResults page, which will contain the actual results of the searc aswell as a pagination system.\r\n    return (\r\n      <div className=\"content\">\r\n        \r\n        <div className = \"top\">\r\n                <div className=\"homeBar\">\r\n                    <span className=\"siteHeadSmall\"> - Advanced Search - </span>\r\n                </div>\r\n                <div className=\"navCont\">\r\n                {/*Navbar component, not including search-bar.*/}\r\n                <Navbar />\r\n                <div className=\"horzLine\"/>\r\n                </div>\r\n            </div>\r\n\r\n        {\r\n            /*Separate searchbars to record different search information. Comprised of:\r\n                type: records that the search values are recording Strings\r\n                className: you already know\r\n                value: gives what will be shown by the searchbar, and what is going to be updated within it\r\n                onChange: wenever the searchbar parameter is modified, the value will also be modified.\r\n\r\n            */ \r\n        }\r\n        <form id=\"SEARCHFORM\">\r\n            <div id=\"ADVSEARCHBARS\">\r\n                <input  type=\"text\"\r\n                        className=\"searchBar\"\r\n                        placeholder=\"Title text for search\"\r\n                        value={searchTitle}\r\n                        onChange={e=>setSearchTitle(e.target.value)}\r\n                />\r\n                <input  type=\"text\"\r\n                        className=\"searchBar\"\r\n                        placeholder=\"Source text for search\"\r\n                        value={searchSource}\r\n                        onChange={e=>setSearchSource(e.target.value)}\r\n                />\r\n                <input  type=\"text\"\r\n                        className=\"searchBar\"\r\n                        placeholder=\"Keywords for search (separate by comma)\"\r\n                        value={searchKeywords}\r\n                        onChange={e=>setSearchKeywords(e.target.value)}\r\n                />\r\n            </div>\r\n\r\n            <div id=\"ADVBUTTONS\">\r\n            <select  \r\n                    className=\"dropdown\"\r\n                    onChange={e=>setSearchEntriesPerPage(e.target.value)}\r\n                    value={searchEntriesPerPage}>\r\n                    <option value=\"10\" type=\"number\">10</option>\r\n                    <option value=\"15\" type=\"number\">15</option>\r\n                    <option value=\"20\" type=\"number\">20</option>\r\n                    <option value=\"25\" type=\"number\">25</option>\r\n            </select>\r\n            \r\n            {\r\n                //This button, contained in the searchbars div, is wrapped by a link which, when pressed, will REIDRECT to the searchResults.js page, where the search happens using the given queries to influence results.\r\n                //ADD ADDITIONAL PARAMETERS ON FINAL IMPLEMENTATION!\r\n            }\r\n            <Link   to={\r\n                        \"/search/AdvBar\"\r\n                    } \r\n                    state={\r\n                        {\r\n                            title:searchTitle,\r\n                            src:searchSource,\r\n                            keywords:searchKeywords,\r\n                            entriesPerPage:searchEntriesPerPage,\r\n                            page:1,\r\n                            mode:true\r\n                        }\r\n                    }\r\n            > {\r\n                //When the search is initiated, we want to first convert our keyword & other values that should be of type ARRAY into ARRAYs\r\n            }\r\n                <button className=\"searchButton\"\r\n                    type=\"button\"\r\n                >\r\n                    Search \r\n                </button>\r\n            </Link>\r\n            </div>\r\n        </form>\r\n        <div className=\"featuredImage\">\r\n            <img src=\"https://drive.google.com/uc?id=1ysqtSrWlQZbauhH5jPPjZO0Wp-U5I5Uy\"/>\r\n        </div>\r\n      </div>\r\n    );\r\n\r\n}\r\n\r\nexport default AdvancedSearch;","C:\\Users\\afroj\\Documents\\haia_final\\src\\components\\searchbar.js",["121","122","123"],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\service\\database.js",[],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\http-common.js",[],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\countryList.js",[],[],"C:\\Users\\afroj\\Documents\\haia_final\\src\\dev\\idNames.js",[],[],{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"128","line":11,"column":8,"nodeType":"126","messageId":"127","endLine":11,"endColumn":18},{"ruleId":"124","severity":1,"message":"129","line":13,"column":25,"nodeType":"126","messageId":"127","endLine":13,"endColumn":29},{"ruleId":"124","severity":1,"message":"130","line":23,"column":9,"nodeType":"126","messageId":"127","endLine":23,"endColumn":14},{"ruleId":"124","severity":1,"message":"131","line":12,"column":9,"nodeType":"126","messageId":"127","endLine":12,"endColumn":16},{"ruleId":"124","severity":1,"message":"129","line":14,"column":10,"nodeType":"126","messageId":"127","endLine":14,"endColumn":14},{"ruleId":"124","severity":1,"message":"132","line":20,"column":10,"nodeType":"126","messageId":"127","endLine":20,"endColumn":18},{"ruleId":"124","severity":1,"message":"133","line":20,"column":20,"nodeType":"126","messageId":"127","endLine":20,"endColumn":29},{"ruleId":"124","severity":1,"message":"134","line":23,"column":8,"nodeType":"126","messageId":"127","endLine":23,"endColumn":17},{"ruleId":"135","severity":1,"message":"136","line":31,"column":21,"nodeType":"137","endLine":31,"endColumn":38},{"ruleId":"124","severity":1,"message":"138","line":1,"column":10,"nodeType":"126","messageId":"127","endLine":1,"endColumn":16},{"ruleId":"124","severity":1,"message":"139","line":1,"column":18,"nodeType":"126","messageId":"127","endLine":1,"endColumn":23},{"ruleId":"124","severity":1,"message":"129","line":1,"column":25,"nodeType":"126","messageId":"127","endLine":1,"endColumn":29},{"ruleId":"124","severity":1,"message":"125","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":17},{"ruleId":"124","severity":1,"message":"140","line":5,"column":8,"nodeType":"126","messageId":"127","endLine":5,"endColumn":19},{"ruleId":"124","severity":1,"message":"133","line":5,"column":20,"nodeType":"126","messageId":"127","endLine":5,"endColumn":29},{"ruleId":"124","severity":1,"message":"129","line":6,"column":10,"nodeType":"126","messageId":"127","endLine":6,"endColumn":14},{"ruleId":"141","severity":1,"message":"142","line":33,"column":21,"nodeType":"143","messageId":"144","endLine":33,"endColumn":23},{"ruleId":"141","severity":1,"message":"142","line":141,"column":32,"nodeType":"143","messageId":"144","endLine":141,"endColumn":34},{"ruleId":"141","severity":1,"message":"142","line":146,"column":37,"nodeType":"143","messageId":"144","endLine":146,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":151,"column":37,"nodeType":"143","messageId":"144","endLine":151,"endColumn":39},{"ruleId":"141","severity":1,"message":"142","line":155,"column":22,"nodeType":"143","messageId":"144","endLine":155,"endColumn":24},{"ruleId":"141","severity":1,"message":"142","line":186,"column":33,"nodeType":"143","messageId":"144","endLine":186,"endColumn":35},{"ruleId":"124","severity":1,"message":"129","line":7,"column":10,"nodeType":"126","messageId":"127","endLine":7,"endColumn":14},{"ruleId":"145","severity":1,"message":"146","line":35,"column":8,"nodeType":"147","endLine":35,"endColumn":10,"suggestions":"148"},{"ruleId":"141","severity":1,"message":"142","line":56,"column":44,"nodeType":"143","messageId":"144","endLine":56,"endColumn":46},{"ruleId":"141","severity":1,"message":"142","line":65,"column":20,"nodeType":"143","messageId":"144","endLine":65,"endColumn":22},{"ruleId":"124","severity":1,"message":"130","line":76,"column":11,"nodeType":"126","messageId":"127","endLine":76,"endColumn":16},{"ruleId":"135","severity":1,"message":"136","line":98,"column":11,"nodeType":"137","endLine":98,"endColumn":46},{"ruleId":"124","severity":1,"message":"149","line":23,"column":10,"nodeType":"126","messageId":"127","endLine":23,"endColumn":14},{"ruleId":"141","severity":1,"message":"150","line":33,"column":42,"nodeType":"143","messageId":"144","endLine":33,"endColumn":44},{"ruleId":"141","severity":1,"message":"150","line":34,"column":46,"nodeType":"143","messageId":"144","endLine":34,"endColumn":48},{"ruleId":"145","severity":1,"message":"151","line":103,"column":6,"nodeType":"147","endLine":103,"endColumn":8,"suggestions":"152"},{"ruleId":"141","severity":1,"message":"142","line":112,"column":16,"nodeType":"143","messageId":"144","endLine":112,"endColumn":18},{"ruleId":"141","severity":1,"message":"142","line":125,"column":26,"nodeType":"143","messageId":"144","endLine":125,"endColumn":28},{"ruleId":"141","severity":1,"message":"142","line":151,"column":59,"nodeType":"143","messageId":"144","endLine":151,"endColumn":61},{"ruleId":"141","severity":1,"message":"142","line":155,"column":54,"nodeType":"143","messageId":"144","endLine":155,"endColumn":56},{"ruleId":"141","severity":1,"message":"142","line":163,"column":66,"nodeType":"143","messageId":"144","endLine":163,"endColumn":68},{"ruleId":"135","severity":1,"message":"136","line":248,"column":27,"nodeType":"137","endLine":248,"endColumn":48},{"ruleId":"124","severity":1,"message":"153","line":4,"column":8,"nodeType":"126","messageId":"127","endLine":4,"endColumn":12},{"ruleId":"124","severity":1,"message":"133","line":9,"column":20,"nodeType":"126","messageId":"127","endLine":9,"endColumn":29},{"ruleId":"124","severity":1,"message":"154","line":14,"column":8,"nodeType":"126","messageId":"127","endLine":14,"endColumn":24},{"ruleId":"124","severity":1,"message":"155","line":17,"column":8,"nodeType":"126","messageId":"127","endLine":17,"endColumn":21},{"ruleId":"135","severity":1,"message":"136","line":122,"column":13,"nodeType":"137","endLine":122,"endColumn":90},{"ruleId":"124","severity":1,"message":"133","line":3,"column":20,"nodeType":"126","messageId":"127","endLine":3,"endColumn":29},{"ruleId":"124","severity":1,"message":"154","line":9,"column":8,"nodeType":"126","messageId":"127","endLine":9,"endColumn":24},{"ruleId":"124","severity":1,"message":"155","line":12,"column":8,"nodeType":"126","messageId":"127","endLine":12,"endColumn":21},"no-unused-vars","'SearchBar' is defined but never used.","Identifier","unusedVar","'haiastyles' is defined but never used.","'Link' is defined but never used.","'title' is assigned a value but never used.","'NavLink' is defined but never used.","'useState' is defined but never used.","'useEffect' is defined but never used.","'Entrylist' is defined but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'Switch' is defined but never used.","'Route' is defined but never used.","'youtubeLogo' is defined but never used.","eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","react-hooks/exhaustive-deps","React Hook useEffect has a missing dependency: 'getEntry'. Either include it or remove the dependency array.","ArrayExpression",["156"],"'type' is assigned a value but never used.","Expected '!==' and instead saw '!='.","React Hook useEffect has a missing dependency: 'dataCall'. Either include it or remove the dependency array.",["157"],"'logo' is defined but never used.","'EntryDataService' is defined but never used.","'SearchResults' is defined but never used.",{"desc":"158","fix":"159"},{"desc":"160","fix":"161"},"Update the dependencies array to be: [getEntry]",{"range":"162","text":"163"},"Update the dependencies array to be: [dataCall]",{"range":"164","text":"165"},[1678,1680],"[getEntry]",[4106,4108],"[dataCall]"]